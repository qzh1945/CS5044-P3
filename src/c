        /*var nestedData = d3.nest()
            .key(function (d) {
                return d.geo;
            })
            .key(function(d) {
                return d.year;
            })
            .rollup(function (leaves) {
                return d3.sum(leaves, function (d) {
                    return d.value;
                });
            })
            .entries(data);
        console.log(nestedData);

        //set xScale
        var timeExtent = d3.extent(data, function(d){
            return d.year;
        });


        var xScale = d3.scaleLinear().domain(timeExtent).range([0, width]);

        //set yScale
        var emValues = new Array();
        nestedData.forEach(function(d){
            (d.values).forEach(function(e){
                emValues.push(e.value);
            });
        });
        var valueExtent = d3.extent(emValues, function (d) {
            return d;
        });
        var yScale = d3.scaleLinear().domain(valueExtent).range([height, 0]);

        //set svg
        var x_axis = d3.axisBottom(xScale);
        var y_axis = d3.axisLeft(yScale);


        //create nest data by geoName
        var nestByGeo = d3.nest()
            .key(function (d) {
                return (d.geo);
            })
            .entries(data);
        //create drop-down menu
        var dropDownMenu = d3.select("#dropDownMenu");
        dropDownMenu
            .append("select")
            .selectAll("option")
            .data(nestByGeo)
            .enter()
            .append("option")
            .attr("value", function (d) {
                return d.key;
            })
            .text(function (d) {
                return d.key;
            });

        dropDownMenu
            .on('change', function () {
                var menuItem = d3.select(this)
                    .select("select")
                    .property("value");
                console.log(menuItem);
                var filteredData = filterData(menuItem);

                updateGeoLine(filteredData);
            });
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate("+ margin + "," + height +")")
            .call(x_axis)
                .selectAll("text")
                .style("text-anchor", "end")
                .attr("dx", "-0.8em")
                .attr("dy", "0.15em")
                .attr("transform", "rotate(-65)");
        svg.append("g")
            .attr("class", "y axis")
            .attr("transform", "translate(" + margin + ", 0)")
            .call(y_axis);

        //draw the line
        var lineGenerator = d3.line()
            .x(function (d){
                return margin + xScale(d.key);
            })
            .y(function(d){
            return yScale(d.value);
        });

        var Lincolnshire = nestedData[0];
        var Boston = nestedData[1];
        var East_Lindsey = nestedData[2];
        var Lincoln = nestedData[3];
        var North_Kesteven = nestedData[4];
        var South_Holland= nestedData[5];
        var South_Kesteven= nestedData[6];
        var West_Lindsey= nestedData[7];

        svg.append("path")
            .datum(Lincolnshire.values)
            .attr("class", "line")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(Boston.values)
            .attr("class", "line Boston")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(East_Lindsey.values)
            .attr("class", "line East_Lindsey")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(Lincoln.values)
            .attr("class", "line Lincoln")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(North_Kesteven.values)
            .attr("class", "line North_Kesteven")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(South_Holland.values)
            .attr("class", "line South_Holland")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(South_Kesteven.values)
            .attr("class", "line South_Kesteven")
            .attr("d", lineGenerator);
        svg.append("path")
            .datum(West_Lindsey.values)
            .attr("class", "line West_Lindsey")
            .attr("d", lineGenerator);

    });*/